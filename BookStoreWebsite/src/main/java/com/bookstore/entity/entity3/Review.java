package com.bookstore.entity.entity3;
// Generated Feb 4, 2024, 9:52:51 AM by Hibernate Tools 5.6.15.Final

import java.sql.Timestamp;
import java.util.Date;
import java.util.Objects;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Transient;

/**
 * Review generated by hbm2java
 */
@Entity
@NamedQueries({
	@NamedQuery(name = "Review.listAll",query = "Select r from Review r order by r.review_time desc"),
	@NamedQuery(name = "Review.countAll",query = "Select Count(r) from Review r"),
	@NamedQuery(name = "Review.findByCustomerAndBook",query = "Select r from Review r where r.customer.customerId =: customerId"
			+ "and r.book.bookId=:bookId"),
	@NamedQuery(name = "Review.mostFavoredBooks",query = "Select r.book,COUNT(r.book.bookId) as ReviewCount,AVG(.fating) as AvgRating from  Review r"
			+ "group by r.book.bookId having avg(r.fating) >=4.0"
			+ "order by ReviewCount DESC,AvgRating DESC")	
})
public class Review implements java.io.Serializable {
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "review_id")
	private Integer review_id;
	@ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.REMOVE })
	@JoinColumn(name = "book_id")
	private Book book;
	@ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.REMOVE })
	@JoinColumn(name = "customer_id")
	private Customer customer;
	@Column(name = "fating", nullable = false)
	private Integer fating;
	@Column(name = "headline", nullable = false)
	private String headline;
	@Column(name = "comment", nullable = false)
	private String comment;
	@Column(name = "review_time", nullable = false)
	private Timestamp review_time;

	public Review(Integer review_id, Book book, Customer customer, Integer fating, String headline, String comment,
			Timestamp review_time) {
		super();
		this.review_id = review_id;
		this.book = book;
		this.customer = customer;
		this.fating = fating;
		this.headline = headline;
		this.comment = comment;
		this.review_time = review_time;
	}

	public Review() {
		super();
	}

	public Integer getReview_id() {
		return review_id;
	}

	public void setReview_id(Integer review_id) {
		this.review_id = review_id;
	}

	public Book getBook() {
		return book;
	}

	public void setBook(Book book) {
		this.book = book;
		book.addReview(this);
	}

	public Customer getCustomer() {
		return customer;
	}

	public void setCustomer(Customer customer) {
		this.customer = customer;
		customer.addReview(this);
	}

	public Integer getFating() {
		return fating;
	}

	public void setFating(Integer fating) {
		this.fating = fating;
	}

	public String getHeadline() {
		return headline;
	}

	public void setHeadline(String headline) {
		this.headline = headline;
	}

	public String getComment() {
		return comment;
	}

	public void setComment(String comment) {
		this.comment = comment;
	}

	public Timestamp getReview_time() {
		return review_time;
	}

	public void setReview_time(Timestamp review_time) {
		this.review_time = review_time;
	}
	

	@Override
	public int hashCode() {
		return Objects.hash(review_id);
	}
	@Transient
	public String stars() {
		String result = "";
		int numberOfStarsOn = (int) fating;
		for(int i=1;i<=numberOfStarsOn;i++) {
			result +="on,";
		}
		int next = numberOfStarsOn + 1;
		for(int j=next;j<=5;j++) {
			result+="off";
		}
		return  result.substring(0,result.length()-1);	
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Review other = (Review) obj;
		return Objects.equals(review_id, other.review_id);
	}

}
