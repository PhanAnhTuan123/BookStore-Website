package com.bookstore.entity.entity3;

import java.security.Timestamp;
import java.util.Arrays;
import java.util.Base64;

// Generated Feb 4, 2024, 9:52:51 AM by Hibernate Tools 5.6.15.Final

import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Objects;
import java.util.Set;

import javax.annotation.processing.Generated;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Transient;

/**
 * Book generated by hbm2java
 */
@Entity
@NamedQueries({
	@NamedQuery(name = "Book.findAll",query = "Select b from Book b "),
	@NamedQuery(name = "Book.findByTittle",query = "Select b from Book b where b.title =: title"),
	@NamedQuery(name = "Book.countAll",query = "Select Count(*) from Book b")
})
public class Book implements java.io.Serializable {
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "book_id")
	private Integer bookID;
	@Column(name = "title", nullable = false, unique = true, length = 128)
	private String title;
	@Column(name = "author", nullable = false, length = 64)
	private String author;
	@Column(name = "description", nullable = false)
	private String description;
	@Column(name = "isbn", nullable = false, length = 15)
	private String isbn;
	@Column(name = "image", nullable = false)
	private byte[] image;
	@Transient
	private String base64Image;
	@Column(name = "price", nullable = false)
	private double price;
	@Column(name = "publish_date", nullable = false)
	private Date publish_date;
	@Column(name = "last_update_time", nullable = false)
	private java.sql.Timestamp last_update_time;

	@ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.REMOVE })
	@JoinColumn(name = "category_id")
	private Category category;

	@OneToMany(mappedBy = "book")
	private List<Review> reviews;

	@OneToMany(mappedBy = "book")
	private List<OrderDetail> detail;

	public Book() {
		super();
	}

	public Book(Integer bookID, String title, String author, String description, String isbn, byte[] image,
			double price, Date publish_date, java.sql.Timestamp last_update_time, Category category) {
		super();
		this.bookID = bookID;
		this.title = title;
		this.author = author;
		this.description = description;
		this.isbn = isbn;
		this.image = image;
		this.price = price;
		this.publish_date = publish_date;
		this.last_update_time = last_update_time;
		this.category = category;
	}

	public Integer getBookID() {
		return bookID;
	}

	public void setBookID(Integer bookID) {
		this.bookID = bookID;
	}

	public String getTitle() {
		return title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	public String getAuthor() {
		return author;
	}

	public void setAuthor(String author) {
		this.author = author;
	}

	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	public String getIsbn() {
		return isbn;
	}

	public void setIsbn(String isbn) {
		this.isbn = isbn;
	}

	public byte[] getImage() {
		return image;
	}

	public List<Review> getReviews() {
		return reviews;
	}

	public void setReviews(List<Review> reviews) {
		this.reviews = reviews;
	}

	public List<OrderDetail> getDetail() {
		return detail;
	}

	public void setDetail(List<OrderDetail> detail) {
		this.detail = detail;
	}

	public void setImage(byte[] image) {
		this.image = image;
	}

	public double getPrice() {
		return price;
	}

	public void setPrice(double price) {
		this.price = price;
	}

	public Date getPublish_date() {
		return publish_date;
	}

	public void setPublish_date(Date publish_date) {
		this.publish_date = publish_date;
	}

	public java.sql.Timestamp getLast_update_time() {
		return last_update_time;
	}

	public void setLast_update_time(java.sql.Timestamp last_update_time) {
		this.last_update_time = last_update_time;
	}

	public Category getCategory() {
		return category;
	}

	public void setCategory(Category category) {
		this.category = category;
		category.addBook(this);
	}

	@Override
	public int hashCode() {
		return Objects.hash(bookID);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Book other = (Book) obj;
		return Objects.equals(bookID, other.bookID);
	}

	public void addReview(Review rv) {
		reviews.add(rv);
	}

	public void addOrder(OrderDetail order) {
		detail.add(order);
	}

	public void removeOrder(OrderDetail order) {
		detail.remove(order);
	}
	public String getBase64Image() {
		this.base64Image =  Base64.getEncoder().encodeToString(this.image); 
		return base64Image;
	}
	public void setBase64Image(String base64) {
		this.base64Image = base64;
	}
	@Override
	public String toString() {
		return "Book [bookID=" + bookID + ", title=" + title + ", author=" + author + ", description=" + description
				+ ", isbn=" + isbn + ", image=" + Arrays.toString(image) + ", price=" + price + ", publish_date="
				+ publish_date + ", last_update_time=" + last_update_time + ", category=" + category + "]";
	}

}
