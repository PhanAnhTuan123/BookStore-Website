package com.bookstore.entity.entity3;
// Generated Feb 4, 2024, 9:52:51 AM by Hibernate Tools 5.6.15.Final

import java.sql.Timestamp;
import java.util.Date;
import java.util.HashSet;
import java.util.Objects;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Embedded;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.ManyToMany;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;

import org.hibernate.annotations.ManyToAny;

import antlr.collections.List;

/**
 * Customer generated by hbm2java
 */
@Entity
@NamedQueries({
	@NamedQuery(name = "Customer.findAll",query = "Select c from Customer c Order by c.register_date"),
	@NamedQuery(name = "Customer.countAll",query = "Select Count(c.email) from Customer c"),
	@NamedQuery(name = "Customer.findByEmail",query = "Select c from Customer c where c.email =:email")
	
	
})
public class Customer implements java.io.Serializable {

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "customer_id")
	private Integer customerId;
	@Column(name = "email", length = 64, nullable = false, unique = true)
	private String email;
	@Column(name = "fullname", length = 30, nullable = false)
	private String fullname;
	@Embedded
	private Address address;
	@Column(name = "phone", length = 15, nullable = false)
	private String phone;
	@Column(name = "password", length = 16, nullable = false)
	private String password;
	@Column(name = "register_date", nullable = false)
	private Timestamp register_date;
	
	@OneToMany(mappedBy = "customer")
	private java.util.List<Review>reviews;
	
	@OneToMany(mappedBy = "customer_id")
	private java.util.List<BookOrder>orders;
	
	public Customer(Integer customerId, String email, String fullname, Address address, String phone, String password,
			Timestamp register_date) {
		super();
		this.customerId = customerId;
		this.email = email;
		this.fullname = fullname;
		this.address = address;
		this.phone = phone;
		this.password = password;
		this.register_date = register_date;
	}

	public Customer() {
		super();
	}

	public Integer getCustomerId() {
		return customerId;
	}

	public void setCustomerId(Integer customerId) {
		this.customerId = customerId;
	}

	public String getEmail() {
		return email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	public String getFullname() {
		return fullname;
	}

	public void setFullname(String fullname) {
		this.fullname = fullname;
	}

	public Address getAddress() {
		return address;
	}

	public void setAddress(Address address) {
		this.address = address;
	}

	public String getPhone() {
		return phone;
	}

	public void setPhone(String phone) {
		this.phone = phone;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public Timestamp getRegister_date() {
		return register_date;
	}

	public void setRegister_date(Timestamp register_date) {
		this.register_date = register_date;
	}
	public void addReview(Review rv) {
		reviews.add(rv);
	}
	public void addBookOrder(BookOrder order) {
		orders.add(order);
	}
	public void removeBookOrder(BookOrder order) {
		orders.remove(order);
	}
	@Override
	public int hashCode() {
		return Objects.hash(customerId, email);
	}
	public void setAddresss(String address) {
		this.address.setAddress(address);
	}
	public void setcity(String city) {
		this.address.setCity(city);
	}
	public void setcontry(String country) {
		this.address.setCountry(country);
	}
	public void setZipcode(String zipcode) {
		this.address.setZipcode(zipcode);
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Customer other = (Customer) obj;
		return Objects.equals(customerId, other.customerId) && Objects.equals(email, other.email);
	}
	
}
